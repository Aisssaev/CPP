using System;

namespace Lab4
{
    class Program
    {
        // –§—É–Ω–∫—Ü—ñ—è
        private static double F(double x)
        {
            return x * x - 4; // –º–∞—î –∫–æ—Ä–µ–Ω—ñ ¬±2
        }

        // –ü–µ—Ä—à–∞ –ø–æ—Ö—ñ–¥–Ω–∞
        private static double Fp(double x)
        {
            return 2 * x;
        }

        // –î—Ä—É–≥–∞ –ø–æ—Ö—ñ–¥–Ω–∞ (–∞–Ω–∞–ª—ñ—Ç–∏—á–Ω–æ)
        private static double F2p(double x)
        {
            return 2;
        }

        // –ë–µ–∑–ø–µ—á–Ω–µ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è double
        private static double ReadDouble(string message)
        {
            while (true)
            {
                Console.Write(message);
                if (double.TryParse(Console.ReadLine(), out var value))
                    return value;

                Console.WriteLine("‚ùå –ü–æ–º–∏–ª–∫–∞: –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ!");
            }
        }

        private static void ReadParameters(out double a, out double b, out double eps, out int kmax)
        {
            while (true)
            {
                a = ReadDouble("–í–≤–µ–¥—ñ—Ç—å a: ");
                b = ReadDouble("–í–≤–µ–¥—ñ—Ç—å b: ");
                eps = ReadDouble("–í–≤–µ–¥—ñ—Ç—å Œµ: ");
                kmax = (int)ReadDouble("–í–≤–µ–¥—ñ—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ—Ç–µ—Ä–∞—Ü—ñ–π Kmax: ");

                if (eps <= 0)
                {
                    Console.WriteLine("‚ùå –ü–æ–º–∏–ª–∫–∞: Œµ –º–∞—î –±—É—Ç–∏ > 0!");
                    continue;
                }

                if (a == b)
                {
                    Console.WriteLine("‚ùå –ü–æ–º–∏–ª–∫–∞: a —ñ b –Ω–µ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏!");
                    continue;
                }

                break;
            }
        }

        static void Main(string[] args)
        {
            Console.OutputEncoding = System.Text.Encoding.UTF8;
            Console.WriteLine("üîπ –ú–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞ –¥–ª—è —Ä–æ–∑–≤‚Äô—è–∑–∞–Ω–Ω—è –Ω–µ–ª—ñ–Ω—ñ–π–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è–Ω–Ω—è f(x)=0\n");

            ReadParameters(out var a, out var b, out var eps, out var Kmax);

            double x, D, Dx;
            D = eps / 100.0; // –∫—Ä–æ–∫ –¥–ª—è —á–∏—Å–µ–ª—å–Ω–∏—Ö –ø–æ—Ö—ñ–¥–Ω–∏—Ö (–Ω–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–π, —Ç—É—Ç –ø–æ—Ö—ñ–¥–Ω—ñ –∞–Ω–∞–ª—ñ—Ç–∏—á–Ω—ñ)
            x = b; // –ø–æ—á–∞—Ç–∫–æ–≤–µ –Ω–∞–±–ª–∏–∂–µ–Ω–Ω—è

            // –í–∏–±—ñ—Ä –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –Ω–∞–±–ª–∏–∂–µ–Ω–Ω—è –∑–∞ —É–º–æ–≤–æ—é –∑–±—ñ–∂–Ω–æ—Å—Ç—ñ
            if (F(x) * F2p(x) < 0)
            {
                x = a;
            }
            else if (F(x) * F2p(x) > 0)
            {
                // —É—Å–µ –¥–æ–±—Ä–µ, x = b –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è
            }
            else
            {
                Console.WriteLine("‚ö† –î–ª—è –∑–∞–¥–∞–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è–Ω–Ω—è –∑–±—ñ–∂–Ω—ñ—Å—Ç—å –º–µ—Ç–æ–¥—É –ù—å—é—Ç–æ–Ω–∞ –Ω–µ –≥–∞—Ä–∞–Ω—Ç—É—î—Ç—å—Å—è.");
                Console.ReadLine();
                return;
            }

            int i;
            for (i = 1; i <= Kmax; i++)
            {
                Dx = F(x) / Fp(x);
                x = x - Dx;

                if (Math.Abs(Dx) < eps)
                {
                    Console.WriteLine($"\n‚úÖ –ö–æ—Ä—ñ–Ω—å –∑–Ω–∞–π–¥–µ–Ω–æ: x = {x:F6}");
                    Console.WriteLine($"–ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ—Ç–µ—Ä–∞—Ü—ñ–π: {i}");
                    Console.ReadLine();
                    return;
                }
            }

            Console.WriteLine("\n‚ùå –ó–∞ –∑–∞–¥–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ—Ç–µ—Ä–∞—Ü—ñ–π –∫–æ—Ä—ñ–Ω—å –∑ —Ç–æ—á–Ω—ñ—Å—Ç—é Œµ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.");
            Console.ReadLine();
        }
    }
}